@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Tasksample.Models.Customerdetails>

@{
    ViewData["Title"] = "List";
}



<div class="container-fluid mt-5">
    <div class="d-flex justify-content-between">
        <h2 class="mb-4">Customer Details</h2>

        <a asp-controller="Customer" asp-action="Create" class="btn btn-primary h-50"><i class="fa-solid fa-plus"></i> Create New Account</a>
    
    </div>
</div>



<!-- Bootstrap card -->
<div class="card" >

    <div class="card-body">
            <div class="table-responsive">
                <table class="table">
        <tr>
            <th>
                @Html.DisplayName("Edit")
            </th>
               <th>
                    @Html.DisplayNameFor(model => model.First().Id)
               </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().FullName)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().CustomerType)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().PhoneNumber)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().DateOfBirth)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().Gender)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().Country)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().IsActive)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().Remarks)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.First().CreatedOn)
            </th>
             <th>
                    @Html.DisplayNameFor(model => model.First().UpdatedOn)
            </th>
             <th>
                    @Html.DisplayName("")
            </th>
             <th>
                    @Html.DisplayName("")
             </th>
     
       </tr>


@foreach (var item in Model) {
        <tr>
            <td>
                 <a asp-controller="Customer" asp-action="Update" asp-route-id="@item.Id"  method="get" class="btn btn-outline-primary"><i class="fa fa-folder" aria-hidden="true"></i>

                 </a>
           </td>
                <th>
                  @Html.DisplayFor(modelItem => item.Id)
               </th>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @if (item.IsActive)
                 {
                     <button class="btn btn-sm btn-success w-10 my-auto"> Active</button>
                 }
                 else
                  {
                     <button class="btn btn-sm btn-danger w-10 my-auto">InActive</button>
                  }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remarks)
            </td>
             <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedOn)
            </td>
                               
                @* <td class="d-flex mt-4"> *@
                    @* @Html.ActionLink("Edit", "Update", new { id = item.Id }) | *@
                 @*  @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                      @Html.ActionLink("Delete", "Delete", new { id = item.Id }) *@
             <td >
                <a asp-controller="Customer" asp-action="Delete" asp-route-id="@item.Id" method="get" class="btn btn-outline-primary"><i class="fa fa-trash" aria-hidden="true"></i></a>&nbsp;
            </td>
            <td>
                <a asp-controller="Customer" asp-action="Details" asp-route-id="@item.Id" method="get" class="btn btn-outline-primary"><i class="fa fa-info" aria-hidden="true"></i></a>        
            </td>
        </tr>
   
  }
          </table>

        </div>
    </div>
</div><br />




@* <div>
    Page @(Model.PageCount < Model.PageNumber ? 0 :Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Show",new{Id = @Model.Id,page}))
</div>

 *@











 
